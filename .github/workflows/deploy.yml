name: Deploy Docker Image to EC2 (Amazon Linux)

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: whomahtab/divyamapp
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  PORT: '3000' # Fixed syntax

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ec2-user
          # Add all required environment variables:
          DB_URL: ${{ secrets.DB_URL }}
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          # 1. Create and secure SSH key
          echo "$PRIVATE_KEY" > deploy-key.pem
          chmod 600 deploy-key.pem

          # 2. Deploy to EC2
          ssh -o StrictHostKeyChecking=no -i deploy-key.pem ${USER}@${HOST} '
            # 3. Install Docker if missing
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo yum update -y
              sudo amazon-linux-extras install docker -y
              sudo service docker start
              sudo usermod -a -G docker ec2-user
              sudo chkconfig docker on
              # Allow docker commands without sudo (optional)
              sudo chmod 666 /var/run/docker.sock
            fi

            # 4. Login to Docker Hub
            echo "$DOCKER_HUB_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin

            # 5. Clean up previous container
            docker stop my-app || true
            docker rm my-app || true

            # 6. Pull the latest image
            docker pull $DOCKER_IMAGE

            # 7. Run new container
            docker run -d \
              --name my-app \
              --restart unless-stopped \
              -p $PORT:$PORT \
              -e NODE_ENV=production \
              -e PORT=$PORT \
              -e DB_URL=$DB_URL \
              -e API_KEY=$API_KEY \
              $DOCKER_IMAGE
          '
